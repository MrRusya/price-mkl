import os
import discord
import requests
from discord.ext import tasks
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv("api.env")
DISCORD_TOKEN = os.getenv('DISCORD_TOKEN')
CMC_API_KEY = os.getenv('CMC_API_KEY')  # –ö–ª—é—á API –¥–ª—è CoinMarketCap

client = discord.Client(intents=discord.Intents.default())
update_interval = 60  # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω—É 1 —Ö–≤–∏–ª–∏–Ω—É (60 —Å–µ–∫—É–Ω–¥)

# –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –¥–∂–µ—Ä–µ–ª–∞ –¥–∞–Ω–∏—Ö
last_source = None

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ü—ñ–Ω–∏ –∑ CoinGecko –∑ —Ç–∞–π–º–∞—É—Ç–æ–º
def get_price_gecko():
    url = 'https://api.coingecko.com/api/v3/simple/price'
    parameters = {
        'ids': 'merkle-trade', 
        'vs_currencies': 'usd',
        'include_24hr_change': 'true'
    }
    
    try:
        response = requests.get(url, params=parameters, timeout=5)  # –¢–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥
        if response.status_code == 200:
            return response.json()
        else:
            print(f"Error fetching data from CoinGecko: {response.status_code} - {response.text}")
            return None
    except requests.exceptions.Timeout:
        print("Timeout occurred when fetching data from CoinGecko")
        return None
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")
        return None

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ü—ñ–Ω–∏ –∑ CoinMarketCap –∑ —Ç–∞–π–º–∞—É—Ç–æ–º
def get_price_marketcap():
    url = 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest'
    parameters = {'symbol': 'MKL', 'convert': 'USD'}
    headers = {'X-CMC_PRO_API_KEY': CMC_API_KEY}
    
    try:
        response = requests.get(url, headers=headers, params=parameters, timeout=5)  # –¢–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥
        if response.status_code == 200:
            return response.json()
        else:
            print(f"Error fetching data from CoinMarketCap: {response.status_code} - {response.text}")
            return None
    except requests.exceptions.Timeout:
        print("Timeout occurred when fetching data from CoinMarketCap")
        return None
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")
        return None

@tasks.loop(seconds=update_interval)
async def update_price_and_nickname():
    global last_source  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É –∑–º—ñ–Ω–Ω—É –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –¥–∂–µ—Ä–µ–ª–∞
    data = get_price_gecko()
    
    if data is None or 'merkle-trade' not in data:
        # –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ü—ñ–Ω—É –∑ CoinMarketCap
        data = get_price_marketcap()
        if data is None or 'data' not in data:
            print("Error: Unable to fetch price from both APIs.")
            return  # –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ –æ–±–æ—Ö API

    # –ó–∞–ø–∏—Å –¥–∂–µ—Ä–µ–ª–∞ –¥–∞–Ω–∏—Ö —É –ª–æ–≥–∞—Ö
    source = "CoinGecko" if 'merkle-trade' in data else "CoinMarketCap"

    # –Ø–∫—â–æ –¥–∂–µ—Ä–µ–ª–æ –∑–º—ñ–Ω–∏–ª–æ—Å—è, –≤–∏–≤–æ–¥–∏–º–æ –≤ –ª–æ–≥
    if source != last_source:
        print(f"Source of price data: {source}")
        last_source = source  # –û–Ω–æ–≤–ª—é—î–º–æ –æ—Å—Ç–∞–Ω–Ω—î –¥–∂–µ—Ä–µ–ª–æ –¥–∞–Ω–∏—Ö

    # –û–±—Ä–æ–±–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    if 'merkle-trade' in data:
        price = data['merkle-trade']['usd']
        change_24h = data['merkle-trade']['usd_24h_change']
    else:
        price = data['data']['MKL']['quote']['USD']['price']
        change_24h = data['data']['MKL']['quote']['USD']['percent_change_24h']

    # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–æ–ª—å–æ—Ä–æ–≤–æ–≥–æ –µ–º–æ–¥–∑—ñ –¥–ª—è –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è –∞–±–æ –ø–∞–¥—ñ–Ω–Ω—è —Ü—ñ–Ω–∏
    change_symbol = "üü¢" if change_24h >= 0 else "üî¥"

    # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω—ñ–∫–Ω–µ–π–º—É –±–æ—Ç–∞ –∑ –ø–æ—Ç–æ—á–Ω–æ—é —Ü—ñ–Ω–æ—é
    for guild in client.guilds:
        await guild.me.edit(nick=f"${price:,.3f}")  # –¢–µ–ø–µ—Ä –ø–æ–∫–∞–∑—É—î 3 —Ü–∏—Ñ—Ä–∏ –ø—ñ—Å–ª—è –∫–æ–º–∏

    # –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –∑–º—ñ–Ω—É –∑–∞ 24 –≥–æ–¥–∏–Ω–∏
    await client.change_presence(activity=discord.Activity(
        type=discord.ActivityType.watching,
        name=f"24h:{change_symbol}{abs(change_24h):.1f}%"
    ))

@client.event
async def on_ready():
    print(f'Logged in as {client.user}')
    update_price_and_nickname.start()

# –ó–∞–ø—É—Å–∫ Discord –±–æ—Ç–∞
client.run(DISCORD_TOKEN)
